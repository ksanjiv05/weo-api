when transaction happen ->
 100'O add to the network on behalf of Collector;


now O distribution ->
  distributionO( noOfInstallment,  transactionBehaviourWeights){
    const maxODistribution = 100/noOfInstallment;
    return maxODistribution*transactionBehaviourWeights

  }

//transactionBehaviourWeights will be veri from 0 - 1
bad(No Payment weigths) -> 0
good(one time weigths) -> 1


and userOvalue calculation
  userOvalueCalculate(averageOfTransactionBehaviourWeights){
    return averageOfTransactionBehaviourWeights;
  }

  //so according to transaction behaviour user O value will go up and down
------
  for example user have [100,90,90] O's which earn by 3 transaction which is [
    1,
    0.9,
    0.9
  ]

  then userO value => 2.8/3 => 0.933;
  $0.933/O
-----
  for example user made  4 transaction which is too late (transactionBehaviourWeights)  
  with 0.2
  so,

  then userO value => 3/4 => 0.75;
  $0.75/O

----
here in 4 transaction all remaing O goes to network -> which is (0+10+10+80)
->100 O's


